//============================================================================
// Name        : DynamicProgramming.cpp
// Author      : alkayadav
// Version     :
// Copyright   : Your copyright notice
// Description : Longest Increasing Subsequence
//============================================================================

#include <iostream>
#include<limits.h>
using namespace std;

int longestIncreaingSubsequence(int arr[],int n){
	int *lis;
	int max_lis=0;
	lis=new int(n);
	for(int i=0;i<n;i++){
		lis[i]=1;
	for(int i=1;i<n;i++){
		for(int j=0;j<i;j++){
			if(arr[j]<arr[i]&& lis[i]<lis[j]+1){
				lis[i]=1+lis[j];
			}
		}
	}

	for(int k=1;k<n;k++){
		if(lis[k]>max_lis){
			max_lis=lis[k];
		}
	}

	}
	return max_lis;
}
int main() {
	int arr_lis[]={10, 22, 9, 33, 21, 50, 41, 60, 80};
	cout<<"LIS is "<<longestIncreaingSubsequence(arr_lis,9);
	return 0;
}
