/*
 * EggDroppingPuzzle.cpp
 *
 *  Created on: Aug 12, 2015
 *      Author: user
 *      Description:Minimum no. of trials needed to find the critical floor in worst case
 */
#include<limits.h>
#include<iostream>
#include<stdio.h>
using namespace std;
int eggDropping(int n,int k){
	if(k==1||k==0){
			return k;
		}
	if(n==1){
		return k;
	}

	int min=INT_MAX;
	int count;
	for(int i=1;i<=k;i++){
		count=max(eggDropping(n-1,k-1),eggDropping(n,k-i));
		if(count<min){
			min=count;
		}
	}
	return min+1;
}
int eggDrop(int n, int k)
{
	// If there are no floors, then no trials needed. OR if there is
	// one floor, one trial needed.
	if (k == 1 || k == 0)
		return k;

	// We need k trials for one egg and k floors
	if (n == 1)
		return k;

	int min = INT_MAX, x, res;

	// Consider all droppings from 1st floor to kth floor and
	// return the minimum of these values plus 1.
	for (x = 1; x <= k; x++)
	{
		res = max(eggDrop(n-1, x-1), eggDrop(n, k-x));
		if (res < min)
			min = res;
	}

	return min + 1;
}

int main(){
	cout<<"Minimum no. of trials needed to find the critical floor in worst case "<<eggDropping(2,10)<<endl;
}


