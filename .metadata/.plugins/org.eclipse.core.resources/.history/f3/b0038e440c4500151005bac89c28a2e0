/*
 * correctTheBST.cpp
 *
 *  Created on: Aug 17, 2015
 *      Author: user
 */

#include<iostream>
#include<stdlib.h>
using namespace std;

struct node{
	int data;
	struct node* left;
	struct node* right;
};

struct node* newNode(int data){
	struct node* newinsnode=(struct node*)malloc(sizeof(struct node));
	newinsnode->data=data;
	newinsnode->left=NULL;
	newinsnode->right=NULL;
	return newinsnode;
}

struct node* insert(struct node* root,int data){
	if(root==NULL){
		return newNode(data);
	}
	if(data<=root->data){
		root->left=insert(root->left,data);
	}
	else if(data>root->data){
		root->right=insert(root->right,data);
	}
	return root;
}

void correctTheBST(struct node* root,struct node** prev,struct node** first,struct node** last,struct node** mid){
	if(root==NULL){
		return;
	}
	if(prev){
		if((*prev)->data>root->data){
			if(!first){
				first=prev;
				mid=root;
			}
			else{
				last=root;
			}
		}
	}

		prev=root;

		correctTheBST(root->left,prev,first,last,mid);
		correctTheBST(root->right,prev,first,last,mid);
}

int main(){
	struct node* root2=NULL;
	root2 = insert(root2, 8);
	root2 = insert(root2, 2);
	root2 = insert(root2, 1);
	root2 = insert(root2, 10);
	root2 = insert(root2, 15);
	root2 = insert(root2, 13);
	root2 = insert(root2, 7);
}



